{"version":3,"sources":["firebase.js","store/auth-context.js","components/SignUp.js","components/Dashboard.js","components/Login.js","components/ForgotPassword.js","components/UpdateProfile.js","components/PrivateRoutes.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","AuthContext","React","createContext","currentUser","signUp","email","password","login","logout","resetPassword","updateEmail","updatePassword","useAuth","useContext","AuthContextprovider","props","useState","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","sendPasswordResetEmail","Provider","children","SignUp","emailRef","useRef","passwordRef","passwordConfirmRef","authCtx","error","setError","navigate","useNavigate","onHandleSubmit","e","a","preventDefault","current","replace","Card","Body","className","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","style","marginTop","to","Dashboard","handleLogout","onClick","Login","handleSubmit","ForgotPassword","message","setMessage","UpdateProfile","promises","push","Promise","all","then","catch","finally","defaultValue","placeholder","PrivateRoutes","App","Container","minHeight","maxWidth","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3196a25f.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\n\nconst app = initializeApp({\n  apiKey: \"AIzaSyANHqvJ4aDXVJBOjIGI2WeUJsdNVngTTrM\",\n  authDomain: \"auth-development-824f1.firebaseapp.com\",\n  projectId: \"auth-development-824f1\",\n  storageBucket: \"auth-development-824f1.appspot.com\",\n  messagingSenderId: \"391290395225\",\n  appId: \"1:391290395225:web:5d5da733f800f7d362af48\",\n});\n\nexport const auth = getAuth(app);\n\nexport default app;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { auth } from \"../firebase\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  sendPasswordResetEmail,\n  updateEmail,\n  updatePassword,\n} from \"@firebase/auth\";\n\nconst AuthContext = React.createContext({\n  currentUser: \"\",\n  signUp: (email, password) => {},\n  login: (email, password) => {},\n  logout: () => {},\n  resetPassword: (email) => {},\n  updateEmail: (email) => {},\n  updatePassword: (password) => {},\n});\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nexport const AuthContextprovider = (props) => {\n  const [currentUser, setCurrentUser] = useState();\n\n  const [loading, setLoading] = useState(true);\n\n  function signUp(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n\n  function login(email, password) {\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n\n  function logout() {\n    return signOut(auth);\n  }\n\n  function resetPassword(email) {\n    return sendPasswordResetEmail(auth, email);\n  }\n\n  function updateEmailHandler(email) {\n    return updateEmail(auth.currentUser, email);\n  }\n\n  function updatePasswordHandler(password) {\n    return updatePassword(auth.currentUser, password);\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n\n    return unsubscribe;\n  }, []);\n\n  const value = {\n    currentUser,\n    signUp,\n    login,\n    logout,\n    resetPassword,\n    updateEmail: updateEmailHandler,\n    updatePassword: updatePasswordHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && props.children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { Fragment, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useRef } from \"react\";\nimport { useAuth } from \"../store/auth-context\";\nimport { useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nexport default function SignUp() {\n  const emailRef = useRef();\n\n  const passwordRef = useRef();\n\n  const passwordConfirmRef = useRef();\n\n  const authCtx = useAuth();\n\n  const [error, setError] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n\n  const navigate = useNavigate();\n\n  const onHandleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n\n    try {\n      setError(\"\");\n\n      setLoading(true);\n\n      await authCtx.signUp(emailRef.current.value, passwordRef.current.value);\n\n      navigate(\"/\", { replace: true });\n    } catch (error) {\n      setError(\"Failed to create an account\");\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <Fragment>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\n\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n\n          <Form onSubmit={onHandleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n            </Form.Group>\n\n            <Button\n              disabled={loading}\n              style={{ marginTop: \"1rem\" }}\n              className=\"w-100\"\n              type=\"submit\"\n            >\n              Sign Up\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n\n      <div className=\"w-100 text-center mt-2\">\n        Already have an account? <Link to=\"/login\">Login</Link>\n      </div>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useState } from \"react\";\nimport { Card, Button, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../store/auth-context\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router\";\n\nexport default function Dashboard() {\n  const authCtx = useAuth();\n\n  const [error, setError] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const handleLogout = async () => {\n    setError(\"\");\n\n    try {\n      await authCtx.logout();\n\n      navigate(\"/login\", { replace: true });\n    } catch (err) {\n      setError(\"Failed to log out\");\n    }\n  };\n\n  return (\n    <Fragment>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <strong>Email:</strong> {authCtx.currentUser.email}\n          <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\n            Update Profile\n          </Link>\n        </Card.Body>\n      </Card>\n\n      <div className=\"w-100 text-center mt-2\">\n        <Button variant=\"link\" onClick={handleLogout}>\n          Log Out\n        </Button>\n      </div>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useRef, useState } from \"react\";\nimport { Card, Form, Button, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../store/auth-context\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Login() {\n  const emailRef = useRef();\n\n  const passwordRef = useRef();\n\n  const authCtx = useAuth();\n\n  const navigate = useNavigate();\n\n  const [error, setError] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n\n      setLoading(true);\n\n      await authCtx.login(emailRef.current.value, passwordRef.current.value);\n\n      navigate(\"/\", { replace: true });\n    } catch (err) {\n      setError(\"Failed to log in\");\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <Fragment>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Log In</h2>\n\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n\n            <Button\n              style={{ marginTop: \"1rem\" }}\n              disabled={loading}\n              className=\"w-100\"\n              type=\"submit\"\n            >\n              Log In\n            </Button>\n          </Form>\n\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/forgot-password\">Forgot Password?</Link>\n          </div>\n        </Card.Body>\n      </Card>\n\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useState, useRef } from \"react\";\nimport { Card, Form, Alert, Button } from \"react-bootstrap\";\nimport { useAuth } from \"../store/auth-context\";\nimport { Link } from \"react-router-dom\";\n\nexport default function ForgotPassword() {\n  const authCtx = useAuth();\n\n  const [error, setError] = useState(\"\");\n\n  const [message, setMessage] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n\n  const emailRef = useRef();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setLoading(true);\n\n      setError(\"\");\n\n      await authCtx.resetPassword(emailRef.current.value);\n\n      setMessage(\"Check your inbox for further instructions\");\n    } catch (err) {\n      setError(\"Failed to reset password\");\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <Fragment>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Password Reset</h2>\n\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n\n          {message && <Alert variant=\"success\">{message}</Alert>}\n\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Reset Password\n            </Button>\n          </Form>\n\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/login\">Login</Link>\n          </div>\n        </Card.Body>\n      </Card>\n\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../store/auth-context\";\nimport { useNavigate } from \"react-router\";\n\nexport default function UpdateProfile() {\n  const navigate = useNavigate();\n\n  const emailRef = useRef();\n\n  const passwordRef = useRef();\n\n  const passwordConfirmRef = useRef();\n\n  const authCtx = useAuth();\n\n  const [error, setError] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    const promises = [];\n\n    setLoading(true);\n\n    setError(\"\");\n\n    if (emailRef.current.value !== authCtx.currentUser.email) {\n      promises.push(authCtx.updateEmail(emailRef.current.value));\n    }\n\n    if (passwordRef.current.value) {\n      promises.push(authCtx.updatePassword(passwordRef.current.value));\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        navigate(\"/\", { replace: true });\n      })\n      .catch(() => {\n        setError(\"Failed to update account\");\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <Fragment>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\n\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                ref={emailRef}\n                required\n                defaultValue={authCtx.currentUser.email}\n              />\n            </Form.Group>\n\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordConfirmRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n\n            <Button\n              style={{ marginTop: \"1rem\" }}\n              disabled={loading}\n              className=\"w-100\"\n              type=\"submit\"\n            >\n              Update\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n\n      <div className=\"w-100 text-center mt-2\">\n        <Link to=\"/\">Cancel</Link>\n      </div>\n    </Fragment>\n  );\n}\n","import React from \"react\";\n\nimport { Navigate } from \"react-router\";\n\nimport { useAuth } from \"../store/auth-context\";\n\nexport default function PrivateRoutes({ children }) {\n  const authCtx = useAuth();\n\n  return authCtx.currentUser ? children : <Navigate to=\"/login\" />;\n}\n","import { Container } from \"react-bootstrap\";\nimport { Routes, Route } from \"react-router\";\nimport SignUp from \"./components/SignUp\";\nimport Dashboard from \"./components/Dashboard\";\nimport Login from \"./components/Login\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport UpdateProfile from \"./components/UpdateProfile\";\nimport PrivateRoutes from \"./components/PrivateRoutes\";\n\nfunction App() {\n  return (\n    <Container\n      className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <PrivateRoutes>\n                <Dashboard />\n              </PrivateRoutes>\n            }\n          />\n\n          <Route\n            path=\"/update-profile\"\n            element={\n              <PrivateRoutes>\n                <UpdateProfile />\n              </PrivateRoutes>\n            }\n          />\n\n          <Route path=\"/signup\" element={<SignUp />} />\n\n          <Route path=\"/login\" element={<Login />} />\n\n          <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n        </Routes>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { AuthContextprovider } from \"./store/auth-context\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <AuthContextprovider>\n      <App />\n    </AuthContextprovider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}